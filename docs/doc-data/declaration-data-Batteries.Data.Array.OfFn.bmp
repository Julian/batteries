{"name":"Batteries.Data.Array.OfFn","instances":[],"imports":["Init","Batteries.Data.List.OfFn"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/c933dd9b00271d869e22b802a015092d1e8e454a/Batteries/Data/Array/OfFn.lean#L14-L16","name":"Array.toList_ofFn","line":14,"kind":"theorem","docLink":"./Batteries/Data/Array/OfFn.html#Array.toList_ofFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/Array/OfFn.html#Array.toList_ofFn\"><span class=\"name\">Array</span>.<span class=\"name\">toList_ofFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/Array/Basic.html#Array.ofFn\">Array.ofFn</a> <span class=\"fn\">f</span>)</span>.toList</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/List/Basic.html#List.ofFn\">List.ofFn</a> <span class=\"fn\">f</span></span></span></div></div>"}]}